David Tigreros
CS265 Section003 Lab8

Part 1: Interfaces
1.1:
i) Hide Implementation details: The implementation behind the interface
should be hidden from the rest of the program, allowing it to be changed
without affecting or breaking anything. The interface should only provide
straightforward acces to the components.

ii) Choose a small orthogonal set of primitives: An interface should only provide
as much functionality as necessary and the functions should not overlap
excesively. 

iii) Don't reach behind the user's back: A function should not create secret
files or variables or change any global data.

iv) Do the same thing the same way everywhere: Functions should be
consistent and maintain regularity. Related things should only be achieved
by related means.

1.2:
The first implementation in C does not handle long input lines or lots of
fields, so it may give wrong answers or crash in these situations. There is
no checking for embedded quotes or commas.  There is no data saved from one
input line to the next, if something needs to be remembered, copies need to be made which slows it down and takes up memory.

1.3:
The first revision is now able to take in an input of any size since the
array grows as necessary. It can also now handle embedded comma and quotes.

1.4:
The problems the first revision has is that it is a lot longer than the
first implementation and more complexi and that it cannot handle empty
fields. It cannot parse 2 csv files at the same time because only a single instance of the program can exist.

1.5:
The C++ implementation is slower and will take longer than the C
implementation when it comes to csv files with a large amount of data.

1.6:
Yes it adheres to the guidelines.
